name: Build OpenWrt Firmware

on:
  push:
    branches:
      - openwrt-24.10
  pull_request:
    branches:
      - openwrt-24.10
  workflow_dispatch: # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up OpenWrt build environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libncurses5-dev gawk git gettext libssl-dev xsltproc unzip zlib1g-dev file wget

    - name: Clone OpenWrt source
      run: |
        git clone https://github.com/openwrt/openwrt.git
        cd openwrt
        git checkout openwrt-24.10

    - name: Update and install feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Copy custom config and scripts
      run: |
        cp build/.config openwrt/.config
        cp build/diy-part.sh openwrt/diy-part.sh

    - name: Run custom scripts
      run: |
        cd openwrt
        chmod +x diy-part.sh
        ./diy-part.sh

    - name: Configure build
      run: |
        cd openwrt
        make defconfig

    - name: Build firmware
      run: |
        cd openwrt
        make -j$(nproc)

    - name: Rename firmware file
      run: |
        DATE=$(date +%Y%m%d)
        mv openwrt/bin/targets/x86/64/openwrt-*.bin openwrt/bin/targets/x86/64/24.10-x86_64-${DATE}.bin

    - name: Upload firmware to GitHub Releases
      uses: softprops/action-gh-release@v1
      with:
        files: |
          openwrt/bin/targets/x86/64/24.10-x86_64-*.bin
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cleanup:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Cleanup old actions and releases
      run: |
        # 清理超过30天的actions运行空间
        gh run list --limit 1000 --json databaseId,createdAt,status,conclusion | jq -r '.[] | select(.status=="completed" and .conclusion=="success" and (now - (.createdAt | fromdateiso8601) > 2592000)) | .databaseId' | xargs -I {} gh run delete {}

        # 清理超过30天的releases
        gh release list --limit 1000 --json name,publishedAt | jq -r '.[] | select((now - (.publishedAt | fromdateiso8601) > 2592000)) | .name' | xargs -I {} gh release delete {}
