name: OpenWrt CI Ultimate

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  DOCKER_IMAGE: openwrt/imagebuilder:x86-64-openwrt-24.10
  BUILD_ROOT: ${{ github.workspace }}/_build
  KERNEL_TARGET: 6.6

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Atomic workspace initialization
      run: |
        sudo rm -rf ${{ env.BUILD_ROOT }}
        mkdir -p ${{ env.BUILD_ROOT }}/logs/{build,package}
        sudo chown -R runner:docker ${{ env.BUILD_ROOT }}
        docker system prune -af

    - name: Kernel version validation
      id: kernel_check
      run: |
        echo "KERNEL_MANIFEST=$(docker run --rm ${{ env.DOCKER_IMAGE }} \
          find target/linux/x86/ -name 'config-*' -printf '%f\n')" >> $GITHUB_OUTPUT
        if ! grep -q "config-${{ env.KERNEL_TARGET }}" <<< "$KERNEL_MANIFEST"; then
          echo "::error::Kernel ${{ env.KERNEL_TARGET }} not found in image!"
          exit 1
        fi

    - name: Build environment probe
      run: |
        docker run --rm ${{ env.DOCKER_IMAGE }} \
          bash -c "ls -l .config && make -n image" > ${{ env.BUILD_ROOT }}/logs/env-probe.log

    - name: Atomic build process
      run: |
        set -eo pipefail
        docker run --rm \
          -e FORCE_UNSAFE_CONFIGURE=1 \
          -v ${{ env.BUILD_ROOT }}/logs:/build-logs \
          -v ${{ env.BUILD_ROOT }}/config:/config \
          ${{ env.DOCKER_IMAGE }} \
          bash -exc " \
            exec &> >(tee /build-logs/full-build.log); \
            cp -v /config/network ./files/etc/config/network; \
            make image V=sc \
              PROFILE=generic \
              KERNEL_PATCHVER='${{ env.KERNEL_TARGET }}' \
              PACKAGES='base-files' \
              FILES='./files' \
              BIN_DIR='./bin'; \
            echo 'BUILD_SUCCESS' > /build-logs/status.mark"

    - name: Post-build forensic analysis
      if: always()
      run: |
        echo "=== Build Artifact Tree ==="
        tree -L 3 ${{ env.BUILD_ROOT }} || true

        echo "=== Critical Error Patterns ==="
        grep -Ei 'error:|fail:|undefined reference' ${{ env.BUILD_ROOT }}/logs/full-build.log | \
          awk '!seen[$0]++' | head -n 100 || true

        echo "=== Kernel Config Validation ==="
        docker run --rm ${{ env.DOCKER_IMAGE }} \
          diff -u target/linux/x86/config-${{ env.KERNEL_TARGET }} .config || true

    - name: Upload forensic data
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: forensic-bundle
        path: ${{ env.BUILD_ROOT }}
        retention-days: 7
