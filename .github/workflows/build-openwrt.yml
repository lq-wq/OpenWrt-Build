name: OpenWrt CI Debug

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DOCKER_IMAGE: openwrt/imagebuilder:x86-64-openwrt-24.10
  ADMIN_IP: 192.168.6.1
  KERNEL_VERSION: 6.6
  BUILD_ROOT: ${{ github.workspace }}/build
  DOCKER_WORKDIR: /home/builder/imagebuilder

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Initialize workspace
      run: |
        # 清理旧构建产物
        rm -rf ${{ env.BUILD_ROOT }}
        mkdir -p ${{ env.BUILD_ROOT }}/{logs,config}
        
        # 生成基础配置
        cat > ${{ env.BUILD_ROOT }}/config/network <<EOF
        config interface 'loopback'
            option ifname 'lo'
            option proto 'static'
            option ipaddr '127.0.0.1'
            option netmask '255.0.0.0'

        config interface 'lan'
            option ifname 'eth0'
            option proto 'static'
            option ipaddr '${{ env.ADMIN_IP }}'
            option netmask '255.255.255.0'
        EOF

    - name: Verify directory structure
      run: |
        tree -L 3 ${{ env.BUILD_ROOT }}
        ls -l ${{ env.BUILD_ROOT }}/config

    - name: Build with debug
      run: |
        docker run --rm \
          -e FORCE_UNSAFE_CONFIGURE=1 \
          -v ${{ env.BUILD_ROOT }}:${{ env.DOCKER_WORKDIR }}/build \
          -v ${{ env.BUILD_ROOT }}/config:/custom_files \
          -w ${{ env.DOCKER_WORKDIR }} \
          ${{ env.DOCKER_IMAGE }} \
          bash -exc " \
            mkdir -p build/logs && \
            { make image V=sc \
                PROFILE='generic' \
                KERNEL_PATCHVER='${{ env.KERNEL_VERSION }}' \
                PACKAGES='base-files luci luci-compat' \
                FILES='/custom_files' \
                2>&1 | tee build/logs/build.log; \
            } || { echo '##[error] Build failed'; exit 2; } \
          "

    - name: Post-build diagnostics
      if: always()
      run: |
        echo "=== Build artifacts structure ==="
        tree -L 3 ${{ env.BUILD_ROOT }}
        
        echo "=== Build logs existence check ==="
        ls -l ${{ env.BUILD_ROOT }}/logs || true
        
        echo "=== Last 100 lines of build log ==="
        tail -n 100 ${{ env.BUILD_ROOT }}/logs/build.log || true

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: openwrt-build
        path: |
          ${{ env.BUILD_ROOT }}/targets/x86/64/*.img.gz
          ${{ env.BUILD_ROOT }}/sha256sums
        retention-days: 7

    - name: Upload debug logs
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: debug-info
        path: |
          ${{ env.BUILD_ROOT }}/logs/build.log
          ${{ env.BUILD_ROOT }}/config/network
        retention-days: 3
