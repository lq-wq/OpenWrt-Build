name: Robust OpenWrt Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DOCKER_IMAGE: openwrt/imagebuilder:x86-64-openwrt-24.10
  ADMIN_IP: 192.168.6.1
  KERNEL_VERSION: 6.6
  BUILD_DIR: ${{ github.workspace }}/artifacts

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Initialize workspace
      run: |
        mkdir -p ${{ env.BUILD_DIR }}/logs
        # 创建必要目录结构
        mkdir -p files/etc/config
        # 生成最小网络配置
        cat > files/etc/config/network <<EOF
        config interface 'loopback'
            option ifname 'lo'
            option proto 'static'
            option ipaddr '127.0.0.1'
            option netmask '255.0.0.0'

        config interface 'lan'
            option ifname 'eth0'
            option proto 'static'
            option ipaddr '${{ env.ADMIN_IP }}'
            option netmask '255.255.255.0'
        EOF

    - name: Build with debug
      run: |
        docker run --rm \
          -e FORCE_UNSAFE_CONFIGURE=1 \
          -v ${{ env.BUILD_DIR }}:/home/builder/imagebuilder/bin \
          -v ${{ github.workspace }}/files:/home/builder/custom_files \
          ${{ env.DOCKER_IMAGE }} \
          bash -c "set -o pipefail; \
            make image V=s \
            PROFILE='generic' \
            KERNEL_PATCHVER='${{ env.KERNEL_VERSION }}' \
            PACKAGES='luci luci-ssl-openssl luci-compat' \
            FILES='/home/builder/custom_files' \
            2>&1 | tee /home/builder/imagebuilder/bin/logs/build.log; \
            exit \${PIPESTATUS[0]}"

    - name: Collect artifacts
      if: success()
      run: |
        echo "Generated files:"
        find ${{ env.BUILD_DIR }} -type f

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware
        path: |
          ${{ env.BUILD_DIR }}/targets/x86/64/*.img.gz
          ${{ env.BUILD_DIR }}/sha256sums
        retention-days: 7

    - name: Capture build logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: debug-logs
        path: ${{ env.BUILD_DIR }}/logs/*
        retention-days: 3

    - name: Failover diagnostics
      if: failure()
      run: |
        echo "=== Last 50 lines of build log ==="
        tail -n 50 ${{ env.BUILD_DIR }}/logs/build.log || true
        
        echo "=== Disk space check ==="
        df -h
        
        echo "=== Docker image info ==="
        docker inspect ${{ env.DOCKER_IMAGE }}
